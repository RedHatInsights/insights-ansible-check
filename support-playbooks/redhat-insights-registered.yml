---
# This playbook
#  ensures that 'redhat-access-insights' is installed
#  ensures that system is registered with Insights service
#  if insights_display_name
#    ensure that system is registered with insights_display_name
#  ensures that Insights system_id fact collector is installed
#  ensures that the permissions on /etc/redhat-access-insights/machine-id,
#    which contains the system_id, are such that normal users can read it.
#
# This playbook has two optional extra variables:
#    redhat_portal_username
#    redhat_portal_password
# to be set to Insights (Red Hat Portal) credentials, if one is set the other must
# also be set.
# In redhat-portal-creds.yml: (where XXXX and YYYYY are replaced with Red Hat Portal credentials)
#
#    redhat_portal_username: XXXXXX
#    redhat_portal_password: YYYYYY
#    ansible-playbook .... --extra-vars @redhat-portal-creds.yml ..redhat-insights-registered.yml
#
- hosts: all
  become: yes
  tasks:

  - name: Install libselinux-python on SELinux systems
    yum:
      name: libselinux-python
      state: present
    become: yes
    when: ansible_distribution == "RedHat" or ansible_distribution == "Fedora"
    # On SELinux systems, many Ansible modules don't run without libselinux-python


  - name: Install Red Hat Access Insights Client
    yum:
      name: redhat-access-insights
      state: present
    become: yes

  - name: add username to redhat-access-insights.conf
    ini_file:
      path: /etc/redhat-access-insights/redhat-access-insights.conf
      section: redhat-access-insights
      option: username
      value: "{{ redhat_portal_username }}"
      no_extra_spaces: true
    when: redhat_portal_username is defined

  - name: add password to redhat-access-insights.conf
    ini_file:
      path: /etc/redhat-access-insights/redhat-access-insights.conf
      section: redhat-access-insights
      option: password
      value: "{{ redhat_portal_password }}"
      no_extra_spaces: true
    when: redhat_portal_password is defined

  - name: Check status of Insights .register file
    stat: path=/etc/redhat-access-insights/.registered
    become: yes
    register: reg_file_task

  - name: Unregister if we are setting the display_name, and we have already registered
    command: redhat-access-insights --unregister
    when:
      - insights_display_name is defined
      - reg_file_task.stat.exists == true
    become: yes

  - name: Register to the Red Hat Access Insights Service
    command: redhat-access-insights --register {{ '--display-name='+insights_display_name if insights_display_name is defined else '' }}
    ignore_errors: yes
    become: yes
    # Always run --register (see next comment for why)

  - name: Register to Insights again if necessary
    command: redhat-access-insights --register {{ '--display-name='+insights_display_name if insights_display_name is defined else '' }} creates=/etc/redhat-access-insights/.registered
    become: yes
    # Only run --register again if there is no .register file at this point
    #   This is to handle the case where the system was unregistered on the server, but this
    #   system hasn't noticed and removed the .registered file


  - name: Change permissions of Insights Config directory so that Insights System ID can be read
    file:
      path: /etc/redhat-access-insights
      mode: og=rx
    become: yes

  - name: Change permissions of machine_id file so that Insights System ID can be read
    file:
      path: /etc/redhat-access-insights/machine-id
      mode: og=r
    become: yes


  - name: Create directory for ansible custom facts
    file:
      state: directory
      recurse: yes
      path: /etc/ansible/facts.d
    become: yes

  - name: Install custom insights fact
    copy:
      src: insights.fact
      dest: /etc/ansible/facts.d
      mode: a+x
    become: yes
